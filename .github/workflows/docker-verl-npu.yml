name: docker-vllm-npu

on:
  workflow_dispatch:  
  push:
    branches: [ "main" ]
    paths:
      - "**/*.py"
      - "requirements.txt"
      - "docker/Dockerfile.ascend_vllm-0.9.1"  
      - ".github/workflows/docker-verl-npu.yml" 
  pull_request:
    branches: [ "main" ]
    paths:  
      - "**/*.py"
      - "requirements.txt"
      - "docker/Dockerfile.ascend_vllm-0.9.1"
      - ".github/workflows/docker-verl-npu.yml"
  release:
    types: [ published ] 
  # 新增：每天0 点定时触发  schedule:
    - cron: "0 16 * * *" 

jobs:
  build-vllm-npu:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-vllm-npu
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Free up disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: true
          docker-images: false

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Get image tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "tag=${{ github.event.release.tag_name }}-a2-py11" >> "$GITHUB_OUTPUT"
          else
            echo "tag=latest-a2-py11" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3  

      - name: Login to Quay.io
        if: ${{ github.event_name != 'pull_request' }}  
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ vars.QUAY_ASCEND_USERNAME }}
          password: ${{ secrets.QUAY_ASCEND_TOKEN }}

      - name: Build and push vllm NPU image
        uses: docker/build-push-action@v6
        with:
          context: .  
          platforms: linux/amd64,linux/arm64 
          file: ./docker/Dockerfile.ascend_vllm-0.9.1  
          push: ${{ github.event_name != 'pull_request' }} 
          tags: |  
            quay.io/ascend/verl:${{ steps.version.outputs.tag }}
          cache-from: type=gha  
          cache-to: type=gha,mode=max  